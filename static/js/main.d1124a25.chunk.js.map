{"version":3,"sources":["fbase.js","components/AuthForm.jsx","routes/Auth.jsx","components/Chat.jsx","components/ChatFactory.jsx","routes/Home.jsx","routes/Profile.jsx","components/Navigation.jsx","components/Router.jsx","components/App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSender","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","classsName","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Chat","chatObj","isOwner","editing","setEditing","text","newChat","setNewChat","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","ChatFactory","userObj","attachment","setAttachment","chat","setChat","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createrId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","alt","faTimes","Home","chats","setChats","useEffect","orderBy","onSnapshot","snapshot","chatArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyChats","where","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1124a25.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\"\nimport  \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/storage\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSender: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance=firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\"\nimport { authService } from \"../fbase\"\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const [newAccount, setNewAccount] = useState(true)\n  const toggleAccount = () => setNewAccount(prev => !prev)\n  const onChange = event => {\n    const {\n      target: { name, value },\n    } = event\n    if (name === \"email\") {\n      setEmail(value)\n    } else if (name === \"password\") {\n      setPassword(value)\n    }\n  }\n  const onSubmit = async event => {\n    event.preventDefault()\n    try {\n      let data\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password)\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password)\n      }\n      console.log(data)\n    } catch (error) {\n      setError(error.message)\n    }\n  }\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {\" \"}\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  )\n}\nexport default AuthForm\n","import React from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { authService, firebaseInstance } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async event => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n  return (\n    <div className=\"container\">\n      <div classsName=\"authContainer\">\n        <FontAwesomeIcon\n          icon={faTwitter}\n          color={\"#04AAFF\"}\n          size=\"3x\"\n          style={{ marginBottom: 30 }}\n        />\n        <AuthForm />\n        <div className=\"authBtns\">\n          <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n            <FontAwesomeIcon icon={faGoogle} />\n            Continue with Google\n          </button>\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n            <FontAwesomeIcon icon={faGithub} />\n            Continue with Github\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\n\nconst Chat = ({ chatObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newChat, setNewChat] = useState(chatObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this chat?\");\n    if (ok) {\n      await dbService.doc(`chats/${chatObj.id}`).delete();\n      await storageService.refFromURL(chatObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing(prev => !prev);\n  const onSubmit = async event => {\n    event.preventDefault();\n    await dbService.doc(`chats/${chatObj.id}`).update({\n      text: newChat,\n    });\n    setEditing(false);\n  };\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setNewChat(value);\n  };\n  return (\n    <div className=\"chat\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container chatEdit\">\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your chat\"\n              value={newChat}\n              required\n            />\n            <input type=\"submit\" value=\"Update Chat\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{chatObj.text}</h4>\n          {chatObj.attachmentUrl && <img src={chatObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"chat_actions\">\n              <button onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n              <button onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst ChatFactory = ({ userObj }) => {\n  const [attachment, setAttachment] = useState(\"\");\n  const [chat, setChat] = useState(\"\");\n  const onSubmit = async event => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const chatObj = {\n      text: chat,\n      createdAt: Date.now(),\n      createrId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"chats\").add(chatObj);\n    setChat(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setChat(value);\n  };\n  const onFileChange = event => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = event => setAttachment(\"\");\n  return (\n    <div>\n      <form onSubmit={onSubmit} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n          <input\n            className=\"factoryInput__input\"\n            value={chat}\n            ß\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n        </div>\n        <label for=\"attach-file\" className=\"factoryInput__label\">\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{\n            opacity: 0,\n          }}\n        />\n        {attachment && (\n          <div className=\"factoryForm__attachment\">\n            <img\n              src={attachment}\n              style={{ backgroundImage: attachment }}\n              alt=\"\"\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\nexport default ChatFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"../fbase\";\nimport Chat from \"../components/Chat\";\nimport ChatFactory from \"../components/ChatFactory\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Cheerio } from \"cheerio\";\n\nconst Home = ({ userObj }) => {\n  const [chats, setChats] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"chats\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot(snapshot => {\n        const chatArray = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setChats(chatArray);\n      });\n  }, []);\n  return (\n    <div className=\"container\">\n      <ChatFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {chats.map(chat => (\n          <Chat\n            key={chat.id}\n            chatObj={chat}\n            isOwner={chat.createrId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Chat from \"../components/Chat\";\nimport { authService, dbService } from \"../fbase\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [chats, setChats] = useState([]);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyChats = async () => {\n    chats = await dbService\n      .collection(\"chats\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  };\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  useEffect(() => {\n    getMyChats();\n  }, []);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{ marginTop: 10 }}\n        />\n      </form>\n      <span onClick={onLogOutClick} className=\"formBtn cancelBtn logOut\">\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\"\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\n        >\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon\n                        icon={faTwitter}\n                        color={\"#04AAFF\"}\n                        size=\"2x\"\n                    />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon\n                        icon={faUser}\n                        color={\"#04AAFF\"}\n                        size=\"2x\"\n                    />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n)\nexport default Navigation\n","import React, { useState } from \"react\";\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\"\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ( {refreshUser, isLoggedIn, userObj} ) => {\n    \n    return(\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                <div\n                style={{\n                    maxWidth: 890,\n                    width: \"100%\",\n                    margin: \"0 auto\",\n                    marginTop: 80,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                </div>):(\n                <Route exact path=\"/\">\n                    <Auth/>\n                    \n                </Route>\n                )}\n            </Switch>\n        </Router>\n    )\n};\nexport default AppRouter;","import React, { useEffect, useState } from \"react\"\nimport AppRouter from \"./Router\"\nimport { authService } from \"../fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true)\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args),\n        })\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true)\n    })\n  }, [])\n  const refreshUser = () => {\n    setUserObj({\n      displayName: authService.currentUser.displayName,\n      uid: authService.currentUser.uid,\n      updateProfile: args => authService.currentUser.updateProfile(args),\n    })\n  }\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}