{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Chat.js","components/ChatFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSender","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Chat","chatObj","isOwner","editing","setEditing","text","newChat","setNewChat","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","ChatFactory","userObj","attachment","setAttachment","chat","setChat","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createrId","collection","add","maxLength","accpet","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","chats","setChats","useEffect","onSnapshot","snapshot","chatArray","docs","map","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyChats","where","orderBy","get","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.268cbdec.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\"\nimport  \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/storage\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSender: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance=firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React,{useState} from \"react\";\nimport { authService } from \"../fbase\";\n\nconst AuthForm=()=>{\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError]=useState(\"\");\n    const [newAccount, setNewAccount]=useState(true); \n    const toggleAccount=()=>setNewAccount((prev)=>!prev);\n    const onChange =(event)=>{\n        const {target: {name,value}}=event;\n        if(name===\"email\"){\n            setEmail(value)\n        }else if(name===\"password\"){\n            setPassword(value)\n        }\n    };\n    const onSubmit = async (event)=>{\n        event.preventDefault();\n        try{\n            let data;\n            if(newAccount){\n            data = await authService.createUserWithEmailAndPassword(email, password);\n            }else{\n            data = await authService.signInWithEmailAndPassword(email,password);\n         }\n         console.log(data);\n        }\n        catch(error){\n            setError(error.message);\n        }\n    };\n    return(\n        <>\n        <form onSubmit={onSubmit}>\n\n            <input\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Email\"\n                required\n                value={email}\n                onChange={onChange} />\n            <input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                value={password}\n                onChange={onChange} />\n            <button type=\"sumbit\">{newAccount ? \"Create Account\" : \"Sign In\"}</button>\n            {error}\n        </form>\n        <span onClick={toggleAccount}> {newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    );\n}\nexport default AuthForm;","import React, { useState } from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\n\nconst Auth = () => {\n\nconst onSocialClick = async (event) =>{\n    const{\n        target: {name},\n    }=event;\n    let provider;\n    if(name === 'google'){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }else if(name==='github'){\n        provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n};\n    return(\n    <div>\n        <AuthForm/>\n        <div>\n            <button onClick={onSocialClick}name=\"google\">Continue with Google</button>\n            <button onClick={onSocialClick}name=\"github\">Continue with Github</button>\n        </div>\n    </div>);\n}\nexport default Auth;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\n\nconst Chat= ({chatObj, isOwner})=>{\n    const [editing, setEditing]=useState(false);\n    const [newChat,setNewChat]=useState(chatObj.text);\n    const onDeleteClick=async()=>{\n        const ok = window.confirm(\"Are you sure you want to delete this chat?\");\n        if(ok){\n            await dbService.doc(`chats/${chatObj.id}`).delete();\n            await storageService.refFromURL(chatObj.attachmentUrl).delete();\n        }\n    }\n    const toggleEditing=()=>setEditing((prev)=>!prev);\n    const onSubmit=async (event)=>{\n        event.preventDefault();\n        await dbService.doc(`chats/${chatObj.id}`).update({\n            text:newChat\n        });\n        setEditing(false);\n    };\n    const onChange=(event)=>{\n        const{\n            target:{value},\n        }=event;\n        setNewChat(value);\n    };\nreturn(\n    <div>\n        {editing?(\n        <>\n        <form onSubmit={onSubmit}>\n            <input \n                onChange={onChange} \n                type=\"text\" \n                placeholder=\"Edit your chat\" \n                value={newChat} \n                required />\n            <input type=\"submit\" value=\"Update Chat\"/>\n        </form>\n        <button onClick={toggleEditing}>Cancel</button>\n        </>\n                    ):(\n                    <>\n                    <h4>{chatObj.text}</h4>\n                    {chatObj.attachmentUrl && <img src={chatObj.attachmentUrl} width=\"50px\" height=\"50px\"/>}\n                    {isOwner&&(\n                        <>\n                            <button onClick={onDeleteClick}>Delete Chat</button>\n                            <button onClick={toggleEditing}>Edit Chat</button>\n                        </>\n                    )}\n                    </>\n        )}\n    </div>\n    );\n    \n};\n\nexport default Chat;","import React from \"react\";\nimport { useState } from \"react\";\nimport {dbService, storageService } from \"../fbase\";\nimport {v4 as uuidv4} from \"uuid\"\nconst ChatFactory=({userObj})=>{\n    const [attachment, setAttachment]=useState(\"\");\n    const [chat,setChat]=useState(\"\");\n    const onSubmit= async (event)=>{\n        event.preventDefault();\n        let attachmentUrl=\"\";\n       if(attachment!==\"\"){\n            const attachmentRef=storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response=await attachmentRef.putString(attachment,\"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n       }\n        const chatObj={\n            text:chat,\n            createdAt:Date.now(),\n            createrId:userObj.uid,\n            attachmentUrl,\n        }\n        await dbService.collection(\"chats\").add(chatObj);\n        setChat(\"\");\n        setAttachment(\"\");\n    }\n    const onChange=(event)=>{\n        const{ \n            target:{value},\n        }=event;\n        setChat(value);\n    }\n    const onFileChange=(event)=>{\n        const {\n            target:{files},\n        }=event;\n        const theFile=files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent)=>{\n            const {\n                currentTarget: {result}\n            }=finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    }\n    const onClearAttachment=(event)=>setAttachment(null);\n    return(\n        <div>\n        <form onSubmit={onSubmit}>\n            <input value={chat} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\n            <input type=\"file\" accpet=\"image/*\" onChange={onFileChange}/>\n            <button type=\"submit\">Chat</button>\n            {attachment && \n                <div>\n                    <img src={attachment} width=\"50px\" height=\"50px\"/>\n                    <button onClick={onClearAttachment}>clear</button>\n                </div>\n            }\n        </form>\n\n    </div>\n    );\n}\nexport default ChatFactory;","import React, { useEffect, useState } from \"react\";\nimport { dbService} from \"../fbase\";\nimport Chat from \"../components/Chat\";\nimport ChatFactory from \"../components/ChatFactory\";\n\nconst Home = ({userObj}) => {\n    \n    const [chats,setChats]=useState([]);\n    \n    useEffect( ()=>{\n        dbService.collection(\"chats\").onSnapshot(snapshot=>{\n            const chatArray=snapshot.docs.map((doc)=>({\n                id:doc.id,\n                ...doc.data(),\n            }));\n            setChats(chatArray);\n        });\n    },[])\n \nreturn(\n    <div>\n        <ChatFactory userObj={userObj}/>\n        <div>\n            {chats.map((chat)=>(\n\n                <Chat \n                    key={chat.id} \n                    chatObj={chat} \n                    isOwner={chat.createrId===userObj.uid}/>\n                ))}\n        </div>\n    </div>\n    );\n};\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Chat from \"../components/Chat\";\nimport { authService, dbService } from \"../fbase\";\n\nexport default ({refreshUser, userObj}) =>{\n    const history=useHistory();\n    const [chats,setChats]=useState([]);\n    const [newDisplayName, setNewDisplayName]=useState(userObj.displayName);\n    const onLogOutClick=()=>{\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyChats=async()=>{\n        chats = await dbService\n            .collection(\"chats\")\n            .where(\"creatorId\",\"==\",userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n    }\n    const onChange=(event)=>{\n        const{\n            target:{value}\n        }=event\n        setNewDisplayName(value);\n    }\n    const onSubmit=async(event)=>{\n        event.preventDefault();\n        if(userObj.displayName!==newDisplayName){\n           await userObj.updateProfile({\n               displayName:newDisplayName,\n            });\n            refreshUser();\n        }\n    \n    }\n    useEffect(()=>{\n        getMyChats();\n    },[])\n    return(\n        <>\n        <form onSubmit={onSubmit}>\n            <input \n                onChange={onChange} \n                type=\"text\" \n                placeholder=\"Display name\"\n                value={newDisplayName}/>\n            <input type=\"submit\" value=\"Update Profile\"/>\n        </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n};","import React from \"react\";\nimport {Link} from \"react-router-dom\"\n\nconst Navigation = ({userObj}) => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n            </li>\n        </ul>\n    \n    </nav>);\nexport default Navigation;","import React, { useState } from \"react\";\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\"\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ( {refreshUser, isLoggedIn, userObj} ) => {\n    \n    return(\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                </>):(\n                <Route exact path=\"/\">\n                    {\n                     \n                    }\n                    <Auth/>\n                </Route>\n                )}\n            </Switch>\n        </Router>\n    )\n};\nexport default AppRouter;","import React ,{useEffect, useState} from \"react\";\nimport AppRouter from \"./Router\"\nimport {authService} from \"../fbase\";\n\nfunction App() {\n  \n  const [init, setInit]=useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj,setUserObj]=useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args)=>user.updateProfile(args),\n        });\n      }else{\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  },[])\n  const refreshUser=()=>{\n    setUserObj({\n      displayName:authService.currentUser.displayName,\n      uid:authService.currentUser.uid,\n      updateProfile: (args)=>authService.currentUser.updateProfile(args),\n    });\n  }\n  return (\n  <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing...\"}\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from \"./fbase\";\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}